const data = [
  {
    id: '_file_system_api_',
    title: 'File System API',
    emoji: 'üìÇ',
    desc: "Only for Chromium-based web browsers. The File System Access API makes it easy and simple to read and write the user's files and access the file system.",
    path: 'filesystem-api',
    canIUseURL: 'https://caniuse.com/mdn-api_window_showopenfilepicker',
    creator: {
      name: 'Usman Sabuwala',
      twitter: 'MaxProgramming1',
    },
  },
  {
    id: '_fullscreen_api_',
    title: 'FullScreen API',
    emoji: 'üì∫',
    desc: 'The Fullscreen API adds methods to present a specific Element (and its descendants) in full-screen mode, and to exit full-screen mode once it is no longer needed.',
    path: 'fullscreen',
    canIUseURL: 'https://caniuse.com/fullscreen',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_clipboard_api_',
    title: 'Clipboard API',
    emoji: 'üìã',
    desc: 'The Clipboard API provides the ability to respond to clipboard commands (cut, copy, and paste) as well as to asynchronously read from and write to the system clipboard.',
    path: 'clipboard',
    canIUseURL: 'https://caniuse.com/async-clipboard',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_broadcast_api_',
    title: 'Broadcast',
    emoji: 'üì°',
    desc: 'The BroadcastChannel is a named channel that allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin.',
    path: 'broadcast-channel',
    canIUseURL: 'https://caniuse.com/broadcastchannel',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_network_info_api_',
    title: 'Network Info',
    emoji: 'üì∂',
    desc: "The Network Information API provides information about the system's connection in terms of general connection type (e.g., 'wifi', 'cellular', etc.).",
    path: 'network-information',
    canIUseURL: 'https://caniuse.com/netinfo',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_resize_observer_api_',
    title: 'Resize Observer',
    emoji: 'üßê',
    desc: 'The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size, with notifications.',
    path: 'resize-observer',
    canIUseURL: 'https://caniuse.com/mdn-api_resizeobserver',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_payment_request_api_',
    title: 'Web payment API',
    emoji: 'üí≥',
    desc: 'The Payment Request API provides a consistent user experience for both merchants and users. Select a preferred way to pay for things.',
    path: 'web-payments',
    canIUseURL: 'https://caniuse.com/payment-request',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_vibration_api_',
    title: 'Vibration API',
    emoji: 'üì≥',
    desc: 'Most modern mobile devices include vibration hardware, which lets software code provide physical feedback to the user by causing the device to shake.',
    path: 'vibration',
    canIUseURL: 'https://caniuse.com/vibration',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_battery_api_',
    title: 'Battery API',
    emoji: 'üîã',
    desc: "The Battery Status API, more often referred to as the Battery API, provides information about the system's battery charge level",
    path: 'battery-status',
    canIUseURL: 'https://caniuse.com/battery-status',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_dnd_api_',
    title: 'Drag and Drop',
    emoji: 'üê¢',
    desc: 'HTML Drag and Drop interfaces enable applications to use drag-and-drop features in browsers.',
    path: 'drag-and-drop',
    canIUseURL: 'https://caniuse.com/dragndrop',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_image_capture_api_',
    title: 'Image Capture',
    emoji: 'üì∏',
    desc: 'The ImageCapture interface provides methods to enable the capture of images or photos from a camera or other photographic device.',
    path: 'image-capture',
    canIUseURL: 'https://caniuse.com/mdn-api_imagecapture',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_web_share_api_',
    title: 'Web Share API',
    emoji: 'üîó',
    desc: 'The Web Share API helps in invoking the native sharing mechanism of the user&#x27;s device',
    path: 'web-share-api',
    canIUseURL: 'https://caniuse.com/web-share',
    creator: {
      name: 'Usman Sabuwala',
      twitter: 'MaxProgramming1',
      email: 'maxprogramming05@gmail.com',
    },
  },
  {
    id: '_geolocation_',
    title: 'Geolocation API',
    emoji: '‚öì',
    desc: 'The Geolocation API allows the user to provide their location to web applications if they so desire. This demo shows how it works using an example.',
    path: 'geolocation',
    canIUseURL: 'https://caniuse.com/mdn-api_geolocation',
    creator: {
      name: 'Sameer Waskar',
      twitter: 'SameerWaskar',
      email: 'dev.wsameer@gmail.com',
    },
  },
  {
    id: '_picture_in_picture_',
    title: 'Picture in Picture',
    emoji: 'üñºÔ∏è',
    desc: 'Picture-in-picture is a feature supported by some smart TVs, devices to show the content on a floating window. It allows users to continue to see the content while interacting with the background page, other sites.',
    path: 'picture-in-picture',
    canIUseURL: 'https://caniuse.com/picture-in-picture',
    creator: {
      name: 'Tapas Adhikary',
      twitter: 'tapasadhikary',
      email: 'tapas.adhikary@gmail.com',
    },
  },
  {
    id: '_screen_capture_',
    title: 'Screen Capture',
    emoji: 'üíª',
    desc: 'The Screen Capture demo introduces additions to the existing Media Capture and Streams API to let the user select a screen to capture as a media stream',
    path: 'screen-capture',
    canIUseURL: 'https://caniuse.com/DisplayMedia',
    creator: {
      name: 'Koustov',
      twitter: 'koustov',
      email: 'koustov@live.com',
    },
  },
  {
    id: '_web_speech_',
    title: 'Web Speech API',
    emoji: 'üéôÔ∏è',
    desc: 'The Web Speech API enables you to incorporate voice data into web apps. ',
    path: 'web-speech',
    canIUseURL: 'https://caniuse.com/speech-recognition',
    creator: {
      name: 'Abiola Farounbi',
      twitter: 'abiolaEsther_',
      email: 'farounbiabiola@gmail.com',
    },
  },
  {
    id: 'css_font_loading',
    title: 'CSS Font Loading API',
    emoji: '‚úçÔ∏è',
    desc: 'The CSS Font Loading API provides events and interfaces for dynamically loading font resources',
    path: 'font-loading',
    canIUseURL: 'font-loading',
    creator: {
      name: 'Emit Dutcher',
      twitter: 'develemit',
      email: 'emitdutcher@gmail.com',
    },
  }, //replace item here
  {
    id: '_notifications_',
    title: 'Notifications API',
    emoji: 'üîî',
    desc: 'The Notifications API allows web pages to control the display of system notifications to the end user',
    path: 'notifications',
    canIUseURL: 'https://caniuse.com/notifications',
    creator: {
      name: 'Mohammed Taha',
      twitter: 'JustE3saR',
      email: 'gsft22221@gmail.com',
    },
  },
];

export default data;
